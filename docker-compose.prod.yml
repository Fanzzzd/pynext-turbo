# Production Docker Compose for self-hosting all services.
# This requires pre-built images pushed to a container registry.
#
# Usage:
# 1. Update the image names below to your own registry.
# 2. Update environment variables in .env files as needed.
# 3. Run: docker-compose -f docker-compose.prod.yml up -d

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-pynext_turbo}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    # IMPORTANT: Replace with your own image
    image: your-dockerhub-username/pynext-api:latest
    env_file:
      - ./apps/api/.env
    environment:
      # Override DATABASE_URL to use the service name
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@postgres:5432/${DB_NAME:-pynext_turbo}
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        uv run alembic upgrade head &&
        echo 'Migrations complete. Starting server.' &&
        gunicorn -k uvicorn.workers.UvicornWorker -w 4 -b 0.0.0.0:8000 src.main:app
      "
    restart: unless-stopped

  web:
    # IMPORTANT: Replace with your own image
    image: your-dockerhub-username/pynext-web:latest
    env_file:
      - ./apps/web/.env
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=/api # The reverse proxy handles this path
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Add volumes for SSL certificates if you are using them
      # - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api
      - web
    restart: unless-stopped

volumes:
  postgres_data: